name: "Ex 2 Promote DUP (Prod)"
on:
  workflow_dispatch:

jobs:
  get-deployment:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get-deployment-action.outputs.sha }}
      ref: ${{ steps.get-deployment-action.outputs.ref }}
    steps:
      - uses: tgrnwd/get-deployment@v1
        id: get-deployment-action
        with:
          token: ${{ secrets.GITHUB_TOKEN  }}
          environment: ex2-stage


  prod:
    runs-on: ubuntu-latest
    environment: ex2-prod
    needs: get-deployment
    steps:

      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment_start
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ex2-prod
          deployment_id: ${{ github.event.deployment.id }}
          ref: ${{ needs.get-deployment.outputs.ref }}

          
      - uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        with:
          commitSha: ${{ needs.get-deployment.outputs.sha }}

      - uses: robinraju/release-downloader@v1.3
        name: download release asset
        with: 
          repository: ${{ github.repository }}
          tag: ${{ steps.get-release.outputs.tag_name }}
          fileName: "*"

      - run: |
          cat release.txt

      - name: Deploy
        run: |
          echo "Deploying to ex2-prod"

      - name: finish deployment
        uses: bobheadxi/deployments@v1
        id: deployment_finish
        if: always()
        with:
          step: finish
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ex2-prod
          deployment_id: ${{ steps.deployment_start.outputs.deployment_id }}