name: "Ex 2 Promote (Stage)"
on:
  workflow_dispatch:

jobs:
  get-deployment:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get-deployment-action.outputs.sha }}
      ref: ${{ steps.get-deployment-action.outputs.ref }}
    steps:
      - uses: tgrnwd/get-deployment@v1
        id: get-deployment-action
        with:
          token: ${{ secrets.GITHUB_TOKEN  }}
          environment: ex2-dev

  stage:
    runs-on: ubuntu-latest
    environment: ex2-stage
    needs: get-deployment
    steps:
      - uses: cardinalby/git-get-release-action@v1
        id: get-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        with:
          commitSha: ${{ needs.get-deployment.outputs.sha }}

      - uses: robinraju/release-downloader@v1.3
        name: download release asset
        with: 
          repository: ${{ github.repository }}
          tag: ${{ steps.get-release.outputs.tag_name }}
          fileName: "*"

      - run: |
          cat release.txt

      - name: Deploy
        run: |
          echo "Deploying to ex2-stage"

  set-deployment-status:
    runs-on: ubuntu-latest
    needs: [ get-deployment, stage ]
    steps:
      - uses: octokit/request-action@v2.x
        id: create_deployment_record
        with:
          route: POST /repos/${{ github.repository }}/deployments
          ref: ${{ needs.get-deployment.outputs.ref }}
          auto_merge: false
          environment: "ex2-stage"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

      - uses: octokit/request-action@v2.x
        id: create_deployment_status_record
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ fromJSON(steps.create_deployment_record.outputs.data).id }}/statuses
          state: ${{ job.status }}
          log_url: 
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}